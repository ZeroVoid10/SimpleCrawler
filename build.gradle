/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    // id 'application'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '0.1.0'


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Maybe uses for parsing page.
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    
    // The Apache Httpclient.
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.8'
    // The Apache commons-io library
    compile group: 'commons-io', name: 'commons-io', version: '2.6'


    // MySql database driver.
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    // Mariadb database driver
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'

    // Log4j logger
    // testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.8.0-beta4'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
	compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    // Logger-api slf4j
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

task run(type: JavaExec) {                                                                                                         
    print "/*************/\n"
    print ">> Start run\n"
    if (project.hasProperty('Main')){
        classpath = sourceSets.main.runtimeClasspath
        //main = "${project.name.toLowerCase()}.${project.getProperty('Main')}"
        main = "${project.getProperty('Main')}"
    } else if (project.hasProperty('Test')) {
        classpath = sourceSets.test.runtimeClasspath;
        //main = "${project.name.toLowerCase()}.${project.getProperty('Test')}"
        main = "${project.getProperty('Test')}"
    } else if (project.hasProperty('Debug')) {
        main = "${project.getProperty('Debug')}"
        classpath = sourceSets.main.runtimeClasspath
        jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=1044"]
    }
}
// Define the main class for the application
// mainClassName = 'SimpleCrawler.App'
